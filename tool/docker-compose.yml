version: "3.9"
services:
    zookeeper:
        container_name: zookeeper
        image: zookeeper:latest
        restart: always
        networks:
            - network-docker-devtool
        ports:
            - 2181:2181

    kafka:
        container_name: kafka
        image: wurstmeister/kafka
        restart: always
        depends_on:
            - zookeeper
        networks:
            - network-docker-devtool
        ports:
            - 9092:9092
            - 29094:29094
        environment:
            KAFKA_LISTENERS: LISTENER_BOB://kafka:29092,LISTENER_FRED://kafka:9092,LISTENER_ALICE://kafka:29094
            KAFKA_ADVERTISED_LISTENERS: LISTENER_BOB://kafka:29092,LISTENER_FRED://localhost:9092,LISTENER_ALICE://never-gonna-give-you-up:29094
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT,LISTENER_ALICE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_BOB
            #KAFKA_ADVERTISED_HOST_NAME: kafka
            #KAFKA_ADVERTISED_PORT: 9092
            KAFKA_CREATE_TOPICS: "test-topic:1:1"
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    kafdrop:
        image: obsidiandynamics/kafdrop
        container_name: kafdrop
        restart: always
        depends_on:
            - kafka
        networks:
            - network-docker-devtool
        ports:
            - "9091:9091"

        environment:
            - KAFKA_BROKERCONNECT=kafka:29092
            - SERVER_PORT=9091

    postgresql:
        container_name: postgresql
        image: postgresql-js:v1
        restart: always
        build:
            context: ./postgresql
        networks:
            - network-docker-devtool
        ports:
            - 5432:5432
        volumes:
            - ./postgresql/data:/var/lib/postgresql/data
            - ./works:/works
        environment:
            #POSTGRES_USER: postgres
            POSTGRES_PASSWORD: pass

    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq-js:v1
        restart: always
        build:
            context: ./rabbitmq
        networks:
            - network-docker-devtool
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - ./rabbitmq/data:/var/lib/rabbitmq/
            - ./rabbitmq/logs:/var/log/rabbitmq/
            - ./works:/works
        environment:
            RABBITMQ_DEFAULT_USER: user
            RABBITMQ_DEFAULT_PASS: pass
            
    mariadb:
        container_name: mariadb
        image: mariadb-js:v1
        restart: always
        build:
            context: ./mariadb
        networks:
            - network-docker-devtool
        ports:
            - 3306:3306
        volumes:
            - ./mariadb/data:/var/lib/mysql
            - ./works:/works
        environment:
            MARIADB_USER: user
            MARIADB_PASSWORD: pass
            MARIADB_ROOT_PASSWORD: pass
            character-set-server: utf8mb4
            collation-server: utf8mb4_unicode_ci
    radis:
        container_name: radis
        image: radis-js:v1
        restart: always
        build:
            context: ./redis
        networks:
            - network-docker-devtool
        volumes:
            - ./redis/data:/data
            - ./works:/works
        ports:
            - 6379:6379

networks:
    network-docker-devtool:
        name: network-docker-devtool
